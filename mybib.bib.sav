% Encoding: UTF-8

@Online{leet1,
  author       = {LeetCode},
  title        = {LeetCode},
  howpublished = {https://leetcode.com},
  abstract     = {Website used to obtain, and solve the questions for my MSc Paper.},
  owner        = {LeetCode},
  url          = {https://leetcode.com},
}

@Book{carrano2003data,
  title     = {Data Structures and Abstractions with Java},
  publisher = {Prentice Hall},
  year      = {2003},
  author    = {Carrano, F.M. and Savitch, W.J.},
  isbn      = {9780130174895},
  lccn      = {2002192658},
  url       = {https://books.google.ie/books?id=peBQAAAAMAAJ},
}

@Book{goodrich2014data,
  title     = {Data Structures and Algorithms in Java},
  publisher = {Wiley},
  year      = {2014},
  author    = {Goodrich, M.T. and Tamassia, R. and Goldwasser, M.H.},
  isbn      = {9781118771334},
  lccn      = {2014412891},
  url       = {https://books.google.ie/books?id=UqmYAgAAQBAJ},
}

@Book{mcdowell2015cracking,
  title     = {Cracking the Coding Interview: 189 Programming Questions and Solutions},
  publisher = {CareerCup, LLC},
  year      = {2015},
  author    = {McDowell, G.L.},
  isbn      = {9780984782857},
  url       = {https://books.google.ie/books?id=jD8iswEACAAJ},
}

@Online{geeks,
  author       = {GeeksForGeeks},
  howpublished = {https://geeksforgeeks.org},
  month        = sep,
  year         = {2017},
  owner        = {GeeksForGeeks},
  url          = {www.geeksforgeeks.org},
}

@Online{geeksalgos,
  author       = {GeeksForGeeks},
  title        = {Top 10 algorithms in Interview Questions},
  howpublished = {http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/},
  owner        = {GeeksForGeeks},
  url          = {http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/},
}

@Online{glassdoor,
  author       = {GlassDoor},
  howpublished = {https://glassdoor.ie},
  month        = sep,
  year         = {2017},
  abstract     = {This website is a job and recruitment site. It offers users the chance to voice their experiences with companies during their interviews. Also users can read up on companies and what the interview process is like for this company.},
  owner        = {GlassDoor},
  url          = {https://www.glassdoor.ie/index.htm},
}

@Misc{gitHub,
  author = {Ian Dempsey},
  title  = {Analyzing Algorithmic Patterns Based on Real Coding Interview Questions},
  year   = {2017},
  note   = {\url{https://github.com/Demostroyer/interview-project}},
  owner  = {Ian Dempsey},
  url    = {https://github.com/Demostroyer/interview-project},
}

@Online{hackerearth,
  author       = {HackerEarth},
  title        = {HackerEarth},
  howpublished = {Online},
  month        = oct,
  year         = {2017},
  url          = {https://www.hackerearth.com},
}

@Online{easyDP,
  author       = {Jose Luis},
  title        = {Easy to understand Dynamic Programming â€“ Edit distance},
  howpublished = {Online},
  month        = mar,
  year         = {2014},
  abstract     = {This was a site I used when I was studying Dynamic Programming. },
  url          = {https://www.javacodegeeks.com/2014/03/easy-to-understand-dynamic-programming-edit-distance.html},
}

@Online{algoHorizon,
  author   = {TutorialHorizon},
  title    = {Algorithms},
  month    = nov,
  year     = {2017},
  abstract = {Good site for Dynamic Programming},
  url      = {http://algorithms.tutorialhorizon.com},
}

@Online{pramp,
  author       = {Pramp,Inc},
  title        = {Pramp},
  howpublished = {Online},
  abstract     = {This site provides mock interview scenarios for programming interviews.},
  owner        = {Pramp,Inc.},
  url          = {https://www.pramp.com},
}

@Online{indeed,
  author       = {Indeed},
  title        = {Indeed},
  howpublished = {http://ie.indeed.com},
  month        = sep,
  year         = {2017},
  abstract     = {Indeed offers information on job offers, and also reviews of companies. },
  url          = {http://ie.indeed.com},
}

@Misc{diff,
  author       = {DiffChecker},
  howpublished = {w},
  month        = nov,
  year         = {2017},
  abstract     = {Used to try and get a numerical number for similarity between pieces of code},
  url          = {https://www.diffchecker.com},
}

@InProceedings{Schleimer:2003:WLA:872757.872770,
  author    = {Schleimer, Saul and Wilkerson, Daniel S. and Aiken, Alex},
  title     = {Winnowing: Local Algorithms for Document Fingerprinting},
  booktitle = {Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data},
  year      = {2003},
  series    = {SIGMOD '03},
  pages     = {76--85},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {872770},
  doi       = {10.1145/872757.872770},
  isbn      = {1-58113-634-X},
  location  = {San Diego, California},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/872757.872770},
}

@Online{mosswebsite,
  author       = {Aiken, A.},
  title        = {Moss},
  howpublished = {https://theory.stanford.edu/~aiken/moss/},
}

@InProceedings{MossBowyer,
  author    = {K. W. Bowyer and L. O. Hall},
  title     = {Experience using "MOSS" to detect cheating on programming assignments},
  booktitle = {Frontiers in Education Conference, 1999. FIE '99. 29th Annual},
  year      = {1999},
  volume    = {3},
  pages     = {13B3/18-13B3/22 vol.3},
  month     = {Nov},
  doi       = {10.1109/FIE.1999.840376},
  issn      = {0190-5848},
  keywords  = {computer science education;educational administrative data processing;educational courses;programming;teaching;C programming course;MOSS;Measure Of Software Similarity;administration;cheating detection;computer science education courses;educational process;plagiarism;programming assignments;Automatic programming;Computer science;Inspection;Maintenance engineering;Plagiarism;Postal services;Programmable control;Software tools;Technological innovation;Testing},
}

@Article{VKuncak,
  author               = {Jani\v{c}i\'{c}, Milena V. and Nikoli\'{c}, Mladen and To\v{s}i\'{c}, Du\v{s}an and Kuncak, Viktor},
  title                = {{Software Verification and Graph Similarity for Automated Evaluation of Students' Assignments}},
  journal              = {Inf. Softw. Technol.},
  year                 = {2013},
  volume               = {55},
  number               = {6},
  pages                = {1004--1016},
  month                = jun,
  issn                 = {0950-5849},
  abstract             = {{Context: The number of students enrolled in universities at standard and on-line programming courses is rapidly increasing. This calls for automated evaluation of students assignments. Objective: We aim to develop methods and tools for objective and reliable automated grading that can also provide substantial and comprehensible feedback. Our approach targets introductory programming courses, which have a number of specific features and goals. The benefits are twofold: reducing the workload for teachers, and providing helpful feedback to students in the process of learning. Method: For sophisticated automated evaluation of students' programs, our grading framework combines results of three approaches (i) testing, (ii) software verification, and (iii) control flow graph similarity measurement. We present our tools for software verification and control flow graph similarity measurement, which are publicly available and open source. The tools are based on an intermediate code representation, so they could be applied to a number of programming languages. Results: Empirical evaluation of the proposed grading framework is performed on a corpus of programs written by university students in programming language C within an introductory programming course. Results of the evaluation show that the synergy of proposed approaches improves the quality and precision of automated grading and that automatically generated grades are highly correlated with instructor-assigned grades. Also, the results show that our approach can be trained to adapt to teacher's grading style. Conclusions: In this paper we integrate several techniques for evaluation of student's assignments. The obtained results suggest that the presented tools can find real-world applications in automated grading.}},
  address              = {Newton, MA, USA},
  citeulike-article-id = {13897223},
  citeulike-linkout-0  = {http://portal.acm.org/citation.cfm?id=2464404},
  citeulike-linkout-1  = {http://dx.doi.org/10.1016/j.infsof.2012.12.005},
  doi                  = {10.1016/j.infsof.2012.12.005},
  posted-at            = {2016-01-04 06:08:18},
  publisher            = {Butterworth-Heinemann},
  url                  = {http://dx.doi.org/10.1016/j.infsof.2012.12.005},
}

@Book{markham2014java,
  title     = {Java Programming Interviews Exposed},
  publisher = {Wiley},
  year      = {2014},
  author    = {Markham, N.},
  series    = {Wrox guides},
  isbn      = {9781118722862},
  lccn      = {2013958289},
  url       = {https://books.google.ie/books?id=uuHAAgAAQBAJ},
}

@Online{pramp,
  author       = {Pramp, I.},
  howpublished = {Online},
  year         = {2017},
  url          = {https://www.pramp.com/#/},
}

@Book{aziz2012elements,
  title     = {Elements of Programming Interviews: The Insiders' Guide},
  publisher = {ElementsOfProgrammingInterviews.com},
  year      = {2012},
  author    = {Aziz, A. and Lee, T.H. and Prakash, A.},
  isbn      = {9781479274833},
  url       = {https://books.google.ie/books?id=y6FLBQAAQBAJ},
}

@Comment{jabref-meta: databaseType:bibtex;}
